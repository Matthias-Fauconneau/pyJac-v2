# Use new trusty images, should yield newer compilers and packages
sudo: required
dist: trusty

# environment
env:
  global:
    - CC=gcc-7
    - CXX=g++-7
    - PRIORITY=500
    - LLV=5.0

addons:
  apt:
    packages:
      - python-dev
      - python-numpy
      - python-pip
      - python3-dev
      - python3-numpy
      - python3-setuptools
      - libsundials-serial-dev
      - liblapack-dev
      - libblas-dev
      - libboost-dev

# language spec
language: python
python:
  - "2.7"
  - "3.6"

# install dependencies
before_install:
  # add new gcc toolchains
  - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
  # get llvm key
  - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
  # add repo
  - sudo apt-add-repository -y "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-$LLV main"
  # update
  - sudo apt-get update -qq
  - sudo apt-get install -qq gcc-7 g++-7 clang-$LLV libclang-$LLV-dev lldb-$LLV lld-$LLV libltdl3-dev libhwloc-dev
  # and finally update alternatives
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 $PRIORITY
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 $PRIORITY
  # ensure new clang/llvm is found first:
  - export PATH=/usr/lib/llvm-$LLV/bin/:$PATH
  - export LD_LIBRARY_PATH=/usr/lib/llvm-$LLV/lib/:$LD_LIBRARY_PATH
  # openmp
  - export OMP_NUM_THREADS=4
  # go up to start cloning from git
  - cd ~
  - git clone https://github.com/OCL-dev/ocl-icd
  # build OCL-ICD
  - cd ocl-icd
  - ./bootstrap
  - ./configure
  - make -j4
  - sudo make install
  # add libdir
  - export LD_LIBRARY_PATH=/usr/local/lib/ocl-icd/:$LD_LIBRARY_PATH
  - cd ~
  # build pocl
  - git clone https://github.com/pocl/pocl
  - cd pocl/
  - mkdir build && cd build
  - cmake -DWITH_LLVM_CONFIG=`which llvm-config` ..
  - make -j4
  - sudo make install
  # build cantera
  - git clone https://github.com/Cantera/cantera
  - cd cantera
  # get scons and cython
  - pip install scons
  - pip install cython
  - scons build -j4 python_package=full python_cmd=`which_python` blas_lapack_libs=lapack,blas, optimize=y
  # and go back to pyjac
  - cd $TRAVIS_BUILD_DIR
# install pyjac
install:
  # currently need the newest loopy version
  - pip install git+https://github.com/inducer/loopy.git
  - pip install -r requirements.txt
  - pip install -r optional-requirements.txt
  - pip install .

# run test
script:
  - cd ~/pyJac
  - nosetests -a '!verylong' -s

Symbol('N_P')
MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} B }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Idx(Symbol('j', integer=True))
Indexed(IndexedBase(Symbol('A')), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} H }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
MyImplicitSymbol('tilde{P}', MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
MyImplicitSymbol('frac{text{d} F_{cent} }{text{d} T }', MyImplicitSymbol('T', Symbol('t')))
MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial dot{omega} }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')), Idx(Symbol('k', integer=True)))
Symbol('P_1')
MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
Indexed(IndexedBase(Symbol('{beta_r}')), Idx(Symbol('i', integer=True)))
Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True)))
Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))
Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))
Symbol('e')
ImplicitSymbol('F_{i}', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))))
Indexed(IndexedBase(Symbol('eta')), Idx(Symbol('l', integer=True)), Idx(Symbol('j', integer=True)))
Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))
Indexed(IndexedBase(Symbol('W')), Symbol('N_s'))
Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3))
log(MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))
Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(5))
Indexed(IndexedBase(Symbol('{E_{a}}')), Idx(Symbol('i', integer=True)))
Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('H'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
MyImplicitSymbol('[X]_i', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')))
Symbol('c')
Indexed(IndexedBase(Symbol('{E_{a,r}}')), Idx(Symbol('i', integer=True)))
Idx(Symbol('l', integer=True))
MyIndexedFuncValue(MyIndexedFunc(Symbol('{C_p}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
MyImplicitSymbol('frac{partial P_{r, i} }{partial T }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))
Symbol('Theta_{F_i, partial T}')
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial c }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('m', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial c }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True)))
Symbol('beta_1')
ImplicitSymbol('frac{partial F_{i} }{partial F_{cent} }', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))))
Idx(Symbol('m', integer=True))
Symbol('d')
MyImplicitSymbol('tilde{T}', MyImplicitSymbol('T', Symbol('t')))
MyImplicitSymbol('frac{partial B_{Troe} }{partial F_{cent} }', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
MyImplicitSymbol('frac{partial F_{i} }{partial T }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
MyImplicitSymbol('W', Symbol('t'))
MyImplicitSymbol('frac{partial A_{Troe} }{partial F_{cent} }', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t')))
MyIndexedFuncValue(MyIndexedFunc(Symbol('{C_v}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s'))
MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))))
MyImplicitSymbol('frac{partial [X]_i }{partial [C][j] }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')))
Symbol('Theta_{partial T, i}')
MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))
Symbol('E_{a_1}')
MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('U'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
MyImplicitSymbol('k_2', MyImplicitSymbol('T', Symbol('t')))
Symbol('P_{max}')
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial dot{omega} }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')), Idx(Symbol('k', integer=True)))
Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('{K_c}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))
MyImplicitSymbol('T', Symbol('t'))
MyIndexedFuncValue(MyIndexedFunc(Symbol('dot{omega}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')), Idx(Symbol('k', integer=True)))
Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True)))
MyImplicitSymbol('k_1', MyImplicitSymbol('T', Symbol('t')))
Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2))
Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1))
Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))
Symbol('P')
MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))
Symbol('t')
Symbol('E_{a, infty}')
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial R }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
Symbol('A_{infty}')
Symbol('Theta_{F_i, partial [C][j]}')
MyImplicitSymbol('frac{partial F_{i} }{partial [C][j] }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
Symbol('T^{**}')
Symbol('beta_{0}')
Symbol('E_{a, 0}')
MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} {C_v} }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
Symbol('T_{min}')
MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True)))
Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('l', integer=True)))
Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('l', integer=True)))
Symbol('T_{max}')
MyIndexedFuncValue(MyIndexedFunc(Symbol('B'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Symbol('P_2')
Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True)))
MyImplicitSymbol('frac{partial P_{r, i} }{partial [C][j] }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} {C_p} }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Symbol('N_T')
Symbol('E_{a_2}')
Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('j', integer=True)), Idx(Symbol('i', integer=True)))
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial R }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))
Symbol('P_{min}')
Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True)))
Equality(Indexed(IndexedBase(Symbol('mathcal{J}'), Tuple(Add(Integer(-1), Symbol('N_s')), Add(Integer(-1), Symbol('N_s')))), Add(Idx(Symbol('k', integer=True)), Integer(1)), Add(Idx(Symbol('j', integer=True)), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial dot{omega} }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')), Idx(Symbol('k', integer=True))))
Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))
MyImplicitSymbol('frac{partial [X]_i }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')))
Symbol('T^{***}')
Symbol('beta_2')
Symbol('A_0')
Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(6))
Indexed(IndexedBase(Symbol('W')), Idx(Symbol('k', integer=True)))
MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
Indexed(IndexedBase(Symbol('beta')), Idx(Symbol('i', integer=True)))
Symbol('b')
MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('k', integer=True)))
MyImplicitSymbol('frac{partial [C] }{partial P }', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))))
Symbol('beta_0')
Indexed(IndexedBase(Symbol('mathcal{J}'), Tuple(Add(Integer(-1), Symbol('N_s')), Add(Integer(-1), Symbol('N_s')))), Add(Idx(Symbol('k', integer=True)), Integer(1)), Add(Idx(Symbol('j', integer=True)), Integer(1)))
Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(0))
Mul(Pow(log(Integer(10)), Integer(-1)), log(MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))))
Symbol('beta_{infty}')
MyImplicitSymbol('n', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))
ImplicitSymbol('frac{partial F_{i} }{partial P_{r, i} }', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))))
Indexed(IndexedBase(Symbol('mathcal{J}'), Tuple(Add(Integer(-1), Symbol('N_s')), Add(Integer(-1), Symbol('N_s')))), Add(Idx(Symbol('k', integer=True)), Integer(1)), Integer(1))
Indexed(IndexedBase(Symbol('{A_{r}}')), Idx(Symbol('i', integer=True)))
Symbol('a')
Symbol('T^{*}')
IndexedConc(Symbol('[C]'),Symbol('t'))
MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t')))
MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))

MyIndexedFuncValue(MyIndexedFunc(Symbol('U'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Mul(Symbol('R_u'), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(Rational(1, 5), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Mul(Rational(1, 4), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3))))), Mul(Rational(1, 3), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2))))), Mul(Rational(1, 2), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1))))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(0)))), Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t'))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(5))))

log(MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))
if reaction_type.plog
Add(Mul(Add(log(MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))), Mul(Integer(-1), log(Symbol('P_1')))), Add(Mul(Integer(-1), log(MyImplicitSymbol('k_1', MyImplicitSymbol('T', Symbol('t'))))), log(MyImplicitSymbol('k_2', MyImplicitSymbol('T', Symbol('t'))))), Pow(Add(Mul(Integer(-1), log(Symbol('P_1'))), log(Symbol('P_2'))), Integer(-1))), log(MyImplicitSymbol('k_1', MyImplicitSymbol('T', Symbol('t')))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
Mul(MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} H }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Mul(Rational(1, 60), Symbol('R_u'), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(3), MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(4), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Mul(Integer(5), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3))))), Mul(Integer(20), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2))))), Mul(Integer(30), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1))))), Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(3), MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(4), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Mul(Integer(5), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3))))), Mul(Integer(20), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2))))), Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(3), MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(4), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Mul(Integer(5), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3))))), Mul(Integer(3), MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(8), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Mul(Integer(5), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3))))), Mul(Integer(20), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2))))), Mul(Integer(30), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1))))), Mul(Integer(60), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(0)))))

Symbol('Theta_{F_i, partial T}')
if reaction_type.fall,reaction_type.chem,falloff_form.lind,thd_body_type.mix
Integer(0)
if reaction_type.fall,reaction_type.chem,falloff_form.troe,thd_body_type.mix
Mul(Integer(-1), ImplicitSymbol('F_{i}', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Pow(Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), Integer(-2)), Add(Mul(Integer(2), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Mul(Float('0.14000000000000001', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Mul(MyImplicitSymbol('frac{text{d} F_{cent} }{text{d} T }', MyImplicitSymbol('T', Symbol('t'))), Add(Mul(Integer(2), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Add(Mul(Float('1.1761999999999999', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Mul(Integer(-1), Float('0.67000000000000004', prec=15), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))))), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Mul(Integer(-1), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), log(Integer(10)))))), Pow(log(Integer(10)), Integer(-1)))
if reaction_type.fall,reaction_type.chem,falloff_form.sri,thd_body_type.mix
Mul(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Add(Mul(Integer(-1), MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Pow(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))), Integer(-1)), Add(Mul(Pow(Symbol('c'), Integer(-1)), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-2)), Symbol('a'), Symbol('b'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))))), Mul(Integer(-1), Integer(2), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Integer(2)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))), Pow(log(Integer(10)), Integer(-2)), log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), log(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('e'))))
if reaction_type.fall,reaction_type.chem,falloff_form.lind,thd_body_type.species
Integer(0)
if reaction_type.fall,reaction_type.chem,falloff_form.troe,thd_body_type.species
Mul(Integer(-1), ImplicitSymbol('F_{i}', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Pow(Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), Integer(-2)), Add(Mul(Integer(2), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Mul(Float('0.14000000000000001', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Mul(MyImplicitSymbol('frac{text{d} F_{cent} }{text{d} T }', MyImplicitSymbol('T', Symbol('t'))), Add(Mul(Integer(2), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Add(Mul(Float('1.1761999999999999', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Mul(Integer(-1), Float('0.67000000000000004', prec=15), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))))), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Mul(Integer(-1), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), log(Integer(10)))))), Pow(log(Integer(10)), Integer(-1)))
if reaction_type.fall,reaction_type.chem,falloff_form.sri,thd_body_type.species
Mul(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Add(Mul(Integer(-1), MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Pow(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))), Integer(-1)), Add(Mul(Pow(Symbol('c'), Integer(-1)), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-2)), Symbol('a'), Symbol('b'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))))), Mul(Integer(-1), Integer(2), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Integer(2)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))), Pow(log(Integer(10)), Integer(-2)), log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), log(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('e'))))
if reaction_type.fall,reaction_type.chem,falloff_form.lind,thd_body_type.unity
Integer(0)
if reaction_type.fall,reaction_type.chem,falloff_form.troe,thd_body_type.unity
Mul(Integer(-1), ImplicitSymbol('F_{i}', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Pow(Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), Integer(-2)), Add(Mul(Integer(2), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Mul(Float('0.14000000000000001', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Integer(-1), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Mul(MyImplicitSymbol('frac{text{d} F_{cent} }{text{d} T }', MyImplicitSymbol('T', Symbol('t'))), Add(Mul(Integer(2), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Add(Mul(Float('1.1761999999999999', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Mul(Integer(-1), Float('0.67000000000000004', prec=15), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))))), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Mul(Integer(-1), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), log(Integer(10)))))), Pow(log(Integer(10)), Integer(-1)))
if reaction_type.fall,reaction_type.chem,falloff_form.sri,thd_body_type.unity
Mul(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Add(Mul(Integer(-1), MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Pow(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))), Integer(-1)), Add(Mul(Pow(Symbol('c'), Integer(-1)), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-2)), Symbol('a'), Symbol('b'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))))), Mul(Integer(-1), Integer(2), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Integer(2)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Integer(-1), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))), Pow(log(Integer(10)), Integer(-2)), log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), log(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('e'))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('{K_c}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))
Mul(Pow(Mul(Symbol('P_{atm}'), Pow(Symbol('R_u'), Integer(-1))), Sum(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s')))), exp(Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('B'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s')))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))
if reversible_type.non_explicit
Mul(Pow(MyIndexedFuncValue(MyIndexedFunc(Symbol('{K_c}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))

MyImplicitSymbol('tilde{P}', MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))
Mul(Pow(Add(log(Symbol('P_{max}')), Mul(Integer(-1), log(Symbol('P_{min}')))), Integer(-1)), Add(Mul(Integer(2), log(MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Mul(Integer(-1), log(Symbol('P_{max}'))), Mul(Integer(-1), log(Symbol('P_{min}')))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} {C_p} }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Mul(Symbol('R_u'), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2)))), Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3)))), Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(2), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
if reversible_type.explicit
Add(Mul(Symbol('Theta_{partial T, i}'), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial c }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))
if reversible_type.non_explicit,reaction_type.elementary,reaction_type.thd,reaction_type.fall,reaction_type.chem
Add(Mul(Symbol('Theta_{partial T, i}'), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial c }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))
if reaction_type.elementary
Symbol('Theta_{partial T, i}')
if reaction_type.thd,thd_body_type.mix
Mul(MyImplicitSymbol('[X]_i', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Symbol('Theta_{partial T, i}'))
if reaction_type.thd,thd_body_type.species
Add(Mul(Symbol('Theta_{partial T, i}'), MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('m', integer=True)))), Mul(Add(Mul(Add(Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True)))), Integer(1)), KroneckerDelta(Idx(Symbol('j', integer=True)), Idx(Symbol('m', integer=True)))), Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True))), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))
if reaction_type.thd,thd_body_type.unity
Mul(MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Symbol('Theta_{partial T, i}'))
if reaction_type.fall,thd_body_type.mix
Mul(Add(Symbol('Theta_{partial T, i}'), Mul(Add(Symbol('Theta_{F_i, partial T}'), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Mul(Integer(-1), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1))), Integer(1)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))
if reaction_type.fall,thd_body_type.species
Mul(Add(Symbol('Theta_{partial T, i}'), Mul(Add(Symbol('Theta_{F_i, partial T}'), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Mul(Integer(-1), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1))), Integer(1)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))
if reaction_type.fall,thd_body_type.unity
Mul(Add(Symbol('Theta_{partial T, i}'), Mul(Add(Symbol('Theta_{F_i, partial T}'), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Mul(Integer(-1), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1))), Integer(1)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Integer(-1), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))
if reaction_type.chem,thd_body_type.mix
Mul(Add(Symbol('Theta_{partial T, i}'), Mul(Add(Mul(Integer(-1), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1))))), Symbol('Theta_{F_i, partial T}')), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))
if reaction_type.chem,thd_body_type.species
Mul(Add(Symbol('Theta_{partial T, i}'), Mul(Add(Mul(Integer(-1), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1))))), Symbol('Theta_{F_i, partial T}')), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))
if reaction_type.chem,thd_body_type.unity
Mul(Add(Symbol('Theta_{partial T, i}'), Mul(Add(Mul(Integer(-1), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Symbol('beta_{0}'), Mul(Integer(-1), Symbol('beta_{infty}')), Integer(-1), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1))))), Symbol('Theta_{F_i, partial T}')), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('dot{omega}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')), Idx(Symbol('k', integer=True)))
Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('i', integer=True)), Integer(1), Symbol('N_r')))

MyImplicitSymbol('frac{partial [X]_i }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')))
if reaction_type.thd
Integer(0)
if reaction_type.thd,thd_body_type.unity
Integer(0)

MyIndexedFuncValue(MyIndexedFunc(Symbol('H'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Mul(Symbol('R_u'), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(Rational(1, 5), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Mul(Rational(1, 4), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3))))), Mul(Rational(1, 3), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2))))), Mul(Rational(1, 2), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1))))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(0)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(5))))

Equality(Indexed(IndexedBase(Symbol('mathcal{J}'), Tuple(Add(Integer(-1), Symbol('N_s')), Add(Integer(-1), Symbol('N_s')))), Add(Idx(Symbol('k', integer=True)), Integer(1)), Add(Idx(Symbol('j', integer=True)), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial dot{omega} }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')), Idx(Symbol('k', integer=True))))
Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('i', integer=True)), Integer(1), Symbol('N_r')))

MyImplicitSymbol('[X]_i', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')))
if thd_body_type.mix
Add(Mul(MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Sum(Mul(Add(Mul(Integer(-1), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s')))))
if thd_body_type.unity
MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))))
if thd_body_type.species
MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('m', integer=True)))

MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
if reversible_type.explicit
Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('{beta_r}')), Idx(Symbol('i', integer=True)))), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a,r}}')), Idx(Symbol('i', integer=True))))), Indexed(IndexedBase(Symbol('{A_{r}}')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial R }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
if reversible_type.explicit
Add(Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Indexed(IndexedBase(Symbol('beta')), Idx(Symbol('i', integer=True))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a}}')), Idx(Symbol('i', integer=True))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Indexed(IndexedBase(Symbol('{beta_r}')), Idx(Symbol('i', integer=True))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a,r}}')), Idx(Symbol('i', integer=True))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))))
if reversible_type.non_explicit
Add(Mul(Integer(-1), Add(Mul(Integer(-1), Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} B }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s')))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Indexed(IndexedBase(Symbol('beta')), Idx(Symbol('i', integer=True))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a}}')), Idx(Symbol('i', integer=True))))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Indexed(IndexedBase(Symbol('beta')), Idx(Symbol('i', integer=True))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a}}')), Idx(Symbol('i', integer=True))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))
if reaction_type.elementary,reaction_type.thd,reaction_type.fall,reaction_type.chem
Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('beta')), Idx(Symbol('i', integer=True)))), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a}}')), Idx(Symbol('i', integer=True))))), Indexed(IndexedBase(Symbol('A')), Idx(Symbol('i', integer=True))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('{C_p}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Mul(Symbol('R_u'), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(0))))

MyImplicitSymbol('frac{text{d} F_{cent} }{text{d} T }', MyImplicitSymbol('T', Symbol('t')))
Add(Mul(Integer(-1), Pow(Symbol('T^{*}'), Integer(-1)), Symbol('a'), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('T^{*}'), Integer(-1))))), Mul(Integer(-1), Pow(Symbol('T^{***}'), Integer(-1)), Add(Mul(Integer(-1), Symbol('a')), Integer(1)), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('T^{***}'), Integer(-1))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-2)), Symbol('T^{**}'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('T^{**}')))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial dot{omega} }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')), Idx(Symbol('k', integer=True)))
Sum(Add(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial c }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial R }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), Tuple(Idx(Symbol('i', integer=True)), Integer(1), Symbol('N_r')))

MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))
Pow(Add(Mul(Pow(log(Integer(10)), Integer(-2)), Pow(log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Integer(2))), Integer(1)), Integer(-1))

Indexed(IndexedBase(Symbol('mathcal{J}'), Tuple(Add(Integer(-1), Symbol('N_s')), Add(Integer(-1), Symbol('N_s')))), Add(Idx(Symbol('k', integer=True)), Integer(1)), Add(Idx(Symbol('j', integer=True)), Integer(1)))
Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('i', integer=True)), Integer(1), Symbol('N_r')))

MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
Add(MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))), Mul(Integer(-1), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('B'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(Rational(1, 20), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Mul(Rational(1, 12), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3))))), Mul(Rational(1, 6), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2))))), Mul(Rational(1, 2), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1))))), Mul(Add(Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(0)), Integer(-1)), log(MyImplicitSymbol('T', Symbol('t')))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(0))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(6)), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(5))))

MyImplicitSymbol('tilde{T}', MyImplicitSymbol('T', Symbol('t')))
Mul(Pow(Add(Mul(Integer(-1), Pow(Symbol('T_{min}'), Integer(-1))), Pow(Symbol('T_{max}'), Integer(-1))), Integer(-1)), Add(Mul(Integer(-1), Pow(Symbol('T_{min}'), Integer(-1))), Mul(Integer(-1), Pow(Symbol('T_{max}'), Integer(-1))), Mul(Integer(2), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial c }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
if reaction_type.elementary
Integer(0)
if reaction_type.thd,thd_body_type.species
Mul(Add(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)))), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True))))
if reaction_type.fall
Mul(Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Mul(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('frac{partial F_{i} }{partial T }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Mul(MyImplicitSymbol('frac{partial P_{r, i} }{partial T }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Add(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Mul(Integer(-1), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))))))
if reaction_type.chem
Mul(Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(MyImplicitSymbol('frac{partial F_{i} }{partial T }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Mul(Integer(-1), MyImplicitSymbol('frac{partial P_{r, i} }{partial T }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))))

MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))
Add(Mul(Symbol('a'), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('T^{*}'), Integer(-1))))), Mul(Add(Mul(Integer(-1), Symbol('a')), Integer(1)), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('T^{***}'), Integer(-1))))), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('T^{**}'))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial c }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
if reaction_type.thd,thd_body_type.species
Add(Mul(Add(Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True)))), Integer(1)), KroneckerDelta(Idx(Symbol('j', integer=True)), Idx(Symbol('m', integer=True)))), Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True))), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True)))))
if reaction_type.fall
Mul(Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Mul(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('frac{partial F_{i} }{partial [C][j] }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Mul(MyImplicitSymbol('frac{partial P_{r, i} }{partial [C][j] }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Add(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Mul(Integer(-1), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))))))
if reaction_type.chem
Mul(Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(MyImplicitSymbol('frac{partial F_{i} }{partial [C][j] }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Mul(Integer(-1), MyImplicitSymbol('frac{partial P_{r, i} }{partial [C][j] }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial dot{omega} }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')), Idx(Symbol('k', integer=True)))
Sum(Add(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial c }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial R }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), Tuple(Idx(Symbol('i', integer=True)), Integer(1), Symbol('N_r')))

Symbol('P')
Mul(MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('n', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Symbol('R_u'), Pow(Symbol('V'), Integer(-1)))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial R }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))))

ImplicitSymbol('frac{partial F_{i} }{partial F_{cent} }', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))))
Mul(ImplicitSymbol('F_{i}', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), Pow(Add(Mul(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(-2))), Integer(1)), Integer(-1)), Add(Mul(Integer(2), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(-2)), Pow(Add(Mul(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(-2))), Integer(1)), Integer(-1)), Add(Mul(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(-1)), MyImplicitSymbol('frac{partial B_{Troe} }{partial F_{cent} }', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Mul(Integer(-1), MyImplicitSymbol('frac{partial A_{Troe} }{partial F_{cent} }', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))))), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1))))

MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
if thd_body_type.mix
Mul(MyImplicitSymbol('[X]_i', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)))
if thd_body_type.species
Mul(MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('m', integer=True))))
if thd_body_type.unity
Mul(MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('m', integer=True))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('k', integer=True)))
if reaction_type.plog,reaction_type.chem
Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))))
if reaction_type.elementary
Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))))
if reaction_type.thd,thd_body_type.mix
Add(Mul(MyImplicitSymbol('[X]_i', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P'))), Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))))), Mul(Add(Mul(Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('j', integer=True)), Idx(Symbol('i', integer=True)))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))
if reaction_type.thd,thd_body_type.species
Add(Mul(Add(Mul(Add(Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True)))), Integer(1)), KroneckerDelta(Idx(Symbol('j', integer=True)), Idx(Symbol('m', integer=True)))), Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True))), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('m', integer=True)))))
if reaction_type.thd,thd_body_type.unity
Add(Mul(MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))))), Mul(Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))

Mul(Pow(log(Integer(10)), Integer(-1)), log(MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))))
if reaction_type.cheb
Sum(Mul(chebyshevt(Add(Idx(Symbol('j', integer=True)), Integer(-1)), MyImplicitSymbol('tilde{T}', MyImplicitSymbol('T', Symbol('t')))), chebyshevt(Add(Idx(Symbol('l', integer=True)), Integer(-1)), MyImplicitSymbol('tilde{P}', MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('eta')), Idx(Symbol('l', integer=True)), Idx(Symbol('j', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Symbol('N_P')), Tuple(Idx(Symbol('j', integer=True)), Integer(1), Symbol('N_T')))

Symbol('Theta_{F_i, partial [C][j]}')
if reaction_type.fall,reaction_type.chem,falloff_form.lind,thd_body_type.mix
Integer(0)
if reaction_type.fall,reaction_type.chem,falloff_form.troe,thd_body_type.mix
Mul(Integer(-1), Integer(2), ImplicitSymbol('F_{i}', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(-1)), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Add(Mul(Float('0.14000000000000001', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Pow(Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), Integer(-2)), Add(Mul(Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('j', integer=True)), Idx(Symbol('i', integer=True)))), Pow(log(Integer(10)), Integer(-1)), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
if reaction_type.fall,reaction_type.chem,falloff_form.sri,thd_body_type.mix
Mul(Integer(-1), Integer(2), MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(-1)), Pow(MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Integer(2)), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Add(Mul(Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('j', integer=True)), Idx(Symbol('i', integer=True)))), Pow(log(Integer(10)), Integer(-2)), log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), log(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1)))))))
if reaction_type.fall,reaction_type.chem,falloff_form.lind,thd_body_type.species
Integer(0)
if reaction_type.fall,reaction_type.chem,falloff_form.troe,thd_body_type.species
Mul(Integer(-1), Integer(2), ImplicitSymbol('F_{i}', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(-1)), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Add(Mul(Float('0.14000000000000001', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Pow(Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), Integer(-2)), Add(Mul(Add(Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True)))), Integer(1)), KroneckerDelta(Idx(Symbol('j', integer=True)), Idx(Symbol('m', integer=True)))), Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True))), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Pow(log(Integer(10)), Integer(-1)), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
if reaction_type.fall,reaction_type.chem,falloff_form.sri,thd_body_type.species
Mul(Integer(-1), Integer(2), MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(-1)), Pow(MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Integer(2)), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Add(Mul(Add(Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True)))), Integer(1)), KroneckerDelta(Idx(Symbol('j', integer=True)), Idx(Symbol('m', integer=True)))), Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True))), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Pow(log(Integer(10)), Integer(-2)), log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), log(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1)))))))
if reaction_type.fall,reaction_type.chem,falloff_form.lind,thd_body_type.unity
Integer(0)
if reaction_type.fall,reaction_type.chem,falloff_form.troe,thd_body_type.unity
Mul(Integer(-1), Integer(2), ImplicitSymbol('F_{i}', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Pow(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(-1)), MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('frac{partial [C] }{partial P }', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Symbol('R_u'), Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Add(Mul(Float('0.14000000000000001', prec=15), MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))), Pow(Add(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2))), Integer(-2)), Pow(log(Integer(10)), Integer(-1)), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
if reaction_type.fall,reaction_type.chem,falloff_form.sri,thd_body_type.unity
Mul(Integer(-1), Integer(2), MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(-1)), MyImplicitSymbol('T', Symbol('t')), Pow(MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), Integer(2)), MyImplicitSymbol('frac{partial [C] }{partial P }', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Symbol('R_u'), Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Pow(log(Integer(10)), Integer(-2)), log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))), log(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1)))))))

MyImplicitSymbol('frac{partial F_{i} }{partial [C][j] }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
if falloff_form.lind
Integer(0)
if falloff_form.troe
Mul(ImplicitSymbol('frac{partial F_{i} }{partial P_{r, i} }', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('frac{partial P_{r, i} }{partial [C][j] }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))

Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('l', integer=True)))
Mul(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('l', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('l', integer=True)), Integer(1)), Symbol('N_s'))))

Indexed(IndexedBase(Symbol('mathcal{J}'), Tuple(Add(Integer(-1), Symbol('N_s')), Add(Integer(-1), Symbol('N_s')))), Add(Idx(Symbol('k', integer=True)), Integer(1)), Integer(1))
Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial T }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('i', integer=True)), Integer(1), Symbol('N_r')))

MyImplicitSymbol('frac{partial F_{i} }{partial T }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
if falloff_form.lind
Integer(0)
if falloff_form.troe
Add(Mul(ImplicitSymbol('frac{partial F_{i} }{partial F_{cent} }', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('frac{text{d} F_{cent} }{text{d} T }', MyImplicitSymbol('T', Symbol('t')))), Mul(ImplicitSymbol('frac{partial F_{i} }{partial P_{r, i} }', (MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), MyImplicitSymbol('frac{partial P_{r, i} }{partial T }', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))))

MyImplicitSymbol('W', Symbol('t'))
Mul(Pow(MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Integer(-1)), Sum(Mul(Indexed(IndexedBase(Symbol('W')), Idx(Symbol('k', integer=True))), MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{partial q }{partial [C][j] }'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
if reaction_type.fall,thd_body_type.mix
Add(Mul(Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Add(Mul(MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Add(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Mul(Integer(-1), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Mul(Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('j', integer=True)), Idx(Symbol('i', integer=True))))), Mul(Symbol('Theta_{F_i, partial [C][j]}'), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))
if reaction_type.fall,thd_body_type.species
Add(Mul(Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Add(Mul(MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Add(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Mul(Integer(-1), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Mul(Add(Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True)))), Integer(1)), KroneckerDelta(Idx(Symbol('j', integer=True)), Idx(Symbol('m', integer=True)))), Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True))), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True)))))), Mul(Symbol('Theta_{F_i, partial [C][j]}'), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))
if reaction_type.fall,thd_body_type.unity
Add(Mul(Add(Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Add(Mul(MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('frac{partial [C] }{partial P }', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Symbol('R_u'), Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Add(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Mul(Integer(-1), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1))), Mul(Symbol('Theta_{F_i, partial [C][j]}'), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))
if reaction_type.chem,thd_body_type.mix
Mul(Add(Mul(Add(Mul(Integer(-1), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Mul(Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('j', integer=True)), Idx(Symbol('i', integer=True))))), Symbol('Theta_{F_i, partial [C][j]}')), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))
if reaction_type.chem,thd_body_type.species
Mul(Add(Mul(Add(Mul(Integer(-1), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)), Add(Mul(Add(Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True)))), Integer(1)), KroneckerDelta(Idx(Symbol('j', integer=True)), Idx(Symbol('m', integer=True)))), Mul(Integer(-1), KroneckerDelta(Symbol('N_s'), Idx(Symbol('m', integer=True))), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True)))))), Symbol('Theta_{F_i, partial [C][j]}')), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))
if reaction_type.chem,thd_body_type.unity
Mul(Add(Mul(Add(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('frac{partial [C] }{partial P }', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t'))), Pow(MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t'))), Integer(-1)), Symbol('R_u'), Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1))), Symbol('Theta_{F_i, partial [C][j]}')), MyIndexedFuncValue(MyIndexedFunc(Symbol('R'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Add(Indexed(IndexedBase(Symbol('S^{primeprime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True)))), Mul(Add(Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('j', integer=True))), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))), Sum(Mul(KroneckerDelta(Symbol('N_s'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('k', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('k', integer=True)), Integer(1)), Symbol('N_s')))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s'))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))))), MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True))))

MyImplicitSymbol('k_{0, i}', MyImplicitSymbol('T', Symbol('t')))
Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Symbol('beta_0')), Symbol('A_0'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, 0}'), Pow(Symbol('R_u'), Integer(-1)))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('{C_v}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Mul(Symbol('R_u'), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(0)), Integer(-1)))

MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s'))
Add(MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Mul(Integer(-1), Sum(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))))

MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))))
Mul(MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)))

MyImplicitSymbol('frac{partial [X]_i }{partial [C][j] }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')))
if reaction_type.thd,thd_body_type.mix
Add(Mul(Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True))))), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('alpha')), Symbol('N_s'), Idx(Symbol('i', integer=True)))), Indexed(IndexedBase(Symbol('alpha')), Idx(Symbol('j', integer=True)), Idx(Symbol('i', integer=True))))
if reaction_type.thd,thd_body_type.unity
Add(Integer(1), Mul(Integer(-1), Pow(Indexed(IndexedBase(Symbol('W')), Symbol('N_s')), Integer(-1)), Indexed(IndexedBase(Symbol('W')), Idx(Symbol('j', integer=True)))))

MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} {C_v} }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))
Mul(Symbol('R_u'), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2)))), Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3)))), Mul(MyImplicitSymbol('T', Symbol('t')), Add(Mul(Integer(2), MyImplicitSymbol('T', Symbol('t')), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(4))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(3)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(2)))), Indexed(IndexedBase(Symbol('a')), Idx(Symbol('k', integer=True)), Integer(1))))

Symbol('Theta_{partial T, i}')
if reversible_type.explicit
Add(Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Indexed(IndexedBase(Symbol('beta')), Idx(Symbol('i', integer=True))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a}}')), Idx(Symbol('i', integer=True))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Indexed(IndexedBase(Symbol('{beta_r}')), Idx(Symbol('i', integer=True))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a,r}}')), Idx(Symbol('i', integer=True))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))))
if reversible_type.non_explicit,reaction_type.elementary,reaction_type.thd,reaction_type.fall,reaction_type.chem
Add(Mul(Integer(-1), Add(Mul(Integer(-1), Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} B }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s')))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Indexed(IndexedBase(Symbol('beta')), Idx(Symbol('i', integer=True))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a}}')), Idx(Symbol('i', integer=True))))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Indexed(IndexedBase(Symbol('beta')), Idx(Symbol('i', integer=True))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('{E_{a}}')), Idx(Symbol('i', integer=True))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))))
if reaction_type.plog
Add(Mul(Integer(-1), Add(Mul(Integer(-1), Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} B }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s')))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Symbol('beta_1'), Mul(Add(log(MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))), Mul(Integer(-1), log(Symbol('P_1')))), Pow(Add(Mul(Integer(-1), log(Symbol('P_1'))), log(Symbol('P_2'))), Integer(-1)), Add(Mul(Integer(-1), Symbol('beta_1')), Symbol('beta_2'), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a_1}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a_2}'), Pow(Symbol('R_u'), Integer(-1))))), Mul(Add(Mul(Integer(-1), log(MyImplicitSymbol('k_1', MyImplicitSymbol('T', Symbol('t'))))), log(MyImplicitSymbol('k_2', MyImplicitSymbol('T', Symbol('t'))))), Pow(Add(Mul(Integer(-1), log(Symbol('P_1'))), log(Symbol('P_2'))), Integer(-1))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a_1}'), Pow(Symbol('R_u'), Integer(-1)))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Add(Mul(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Add(Symbol('beta_1'), Mul(Add(log(MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))), Mul(Integer(-1), log(Symbol('P_1')))), Pow(Add(Mul(Integer(-1), log(Symbol('P_1'))), log(Symbol('P_2'))), Integer(-1)), Add(Mul(Integer(-1), Symbol('beta_1')), Symbol('beta_2'), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a_1}'), Pow(Symbol('R_u'), Integer(-1))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a_2}'), Pow(Symbol('R_u'), Integer(-1))))), Mul(Add(Mul(Integer(-1), log(MyImplicitSymbol('k_1', MyImplicitSymbol('T', Symbol('t'))))), log(MyImplicitSymbol('k_2', MyImplicitSymbol('T', Symbol('t'))))), Pow(Add(Mul(Integer(-1), log(Symbol('P_1'))), log(Symbol('P_2'))), Integer(-1))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a_1}'), Pow(Symbol('R_u'), Integer(-1)))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))))
if reaction_type.cheb
Add(Mul(Integer(-1), Add(Mul(Integer(-1), Sum(Mul(Indexed(IndexedBase(Symbol('nu')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True))), MyIndexedFuncValue(MyIndexedFunc(Symbol('frac{text{d} B }{text{d} T }'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('k', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Symbol('N_s')))), Mul(Integer(2), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Sum(Mul(Add(Mul(Pow(Add(log(Symbol('P_{max}')), Mul(Integer(-1), log(Symbol('P_{min}')))), Integer(-1)), Add(Idx(Symbol('l', integer=True)), Integer(-1)), chebyshevt(Add(Idx(Symbol('j', integer=True)), Integer(-1)), MyImplicitSymbol('tilde{T}', MyImplicitSymbol('T', Symbol('t')))), chebyshevu(Add(Idx(Symbol('l', integer=True)), Integer(-2)), MyImplicitSymbol('tilde{P}', MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Add(Mul(Integer(-1), Pow(Symbol('T_{min}'), Integer(-1))), Pow(Symbol('T_{max}'), Integer(-1))), Integer(-1)), Add(Idx(Symbol('j', integer=True)), Integer(-1)), chebyshevt(Add(Idx(Symbol('l', integer=True)), Integer(-1)), MyImplicitSymbol('tilde{P}', MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), chebyshevu(Add(Idx(Symbol('j', integer=True)), Integer(-2)), MyImplicitSymbol('tilde{T}', MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('eta')), Idx(Symbol('l', integer=True)), Idx(Symbol('j', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Symbol('N_P')), Tuple(Idx(Symbol('j', integer=True)), Integer(1), Symbol('N_T'))))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_r}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s'))))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('[C]', (MyImplicitSymbol('T', Symbol('t')), MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), Add(Mul(Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(-1), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{primeprime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_r}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), MyImplicitSymbol('frac{partial P }{partial T }', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Pow(Symbol('R_u'), Integer(-1)), Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), MyIndexedFuncValue(MyIndexedFunc(Symbol('{R_f}'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))), Mul(Integer(2), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Integer(-1)), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Symbol('N_s')), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Symbol('N_s'), Idx(Symbol('i', integer=True))), Integer(1))), MyIndexedFuncValue(MyIndexedFunc(Symbol('{k_f}'),MyImplicitSymbol('T', Symbol('t'))), MyImplicitSymbol('T', Symbol('t')), Idx(Symbol('i', integer=True))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('k', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('k', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('k', integer=True)), Integer(1), Add(Integer(-1), Symbol('N_s')))), Sum(Mul(Add(Mul(Pow(Add(log(Symbol('P_{max}')), Mul(Integer(-1), log(Symbol('P_{min}')))), Integer(-1)), Add(Idx(Symbol('l', integer=True)), Integer(-1)), chebyshevt(Add(Idx(Symbol('j', integer=True)), Integer(-1)), MyImplicitSymbol('tilde{T}', MyImplicitSymbol('T', Symbol('t')))), chebyshevu(Add(Idx(Symbol('l', integer=True)), Integer(-2)), MyImplicitSymbol('tilde{P}', MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))))))), Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Pow(Add(Mul(Integer(-1), Pow(Symbol('T_{min}'), Integer(-1))), Pow(Symbol('T_{max}'), Integer(-1))), Integer(-1)), Add(Idx(Symbol('j', integer=True)), Integer(-1)), chebyshevt(Add(Idx(Symbol('l', integer=True)), Integer(-1)), MyImplicitSymbol('tilde{P}', MyImplicitSymbol('P', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))))), chebyshevu(Add(Idx(Symbol('j', integer=True)), Integer(-2)), MyImplicitSymbol('tilde{T}', MyImplicitSymbol('T', Symbol('t')))))), Indexed(IndexedBase(Symbol('eta')), Idx(Symbol('l', integer=True)), Idx(Symbol('j', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Symbol('N_P')), Tuple(Idx(Symbol('j', integer=True)), Integer(1), Symbol('N_T')))))

MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
Add(Mul(Integer(-1), Float('1.1761999999999999', prec=15), Pow(log(Integer(10)), Integer(-1)), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Mul(Integer(-1), Float('0.14000000000000001', prec=15), Pow(log(Integer(10)), Integer(-1)), log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), Float('0.80600000000000005', prec=15))

MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t')))))
Add(Mul(Integer(-1), Float('0.67000000000000004', prec=15), Pow(log(Integer(10)), Integer(-1)), log(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Mul(Pow(log(Integer(10)), Integer(-1)), log(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))), Float('-0.40000000000000002', prec=15))

MyIndexedFuncValue(MyIndexedFunc(Symbol('c'),(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')))), Tuple(IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t'))), Idx(Symbol('i', integer=True)))
if reaction_type.elementary
Integer(1)
if reaction_type.thd
MyImplicitSymbol('[X]_i', (IndexedConc(Symbol('[C]'),Symbol('t')), MyImplicitSymbol('T', Symbol('t')), Symbol('P')))
if reaction_type.fall
Mul(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)))
if reaction_type.chem
Mul(MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Pow(Add(MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), Integer(1)), Integer(-1)))

Indexed(IndexedBase(Symbol('S^{prime}')), Idx(Symbol('l', integer=True)))
Mul(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True))), Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Add(Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True))), Integer(-1))), Product(Pow(MyIndexedFuncValue(IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('t'), Idx(Symbol('l', integer=True))), Indexed(IndexedBase(Symbol('nu^{prime}')), Idx(Symbol('l', integer=True)), Idx(Symbol('i', integer=True)))), Tuple(Idx(Symbol('l', integer=True)), Integer(1), Add(Idx(Symbol('l', integer=True)), Integer(-1))), Tuple(Idx(Symbol('l', integer=True)), Add(Idx(Symbol('l', integer=True)), Integer(1)), Symbol('N_s'))))

MyImplicitSymbol('k_{infty, i}', MyImplicitSymbol('T', Symbol('t')))
Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Symbol('beta_{infty}')), Symbol('A_{infty}'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('E_{a, infty}'), Pow(Symbol('R_u'), Integer(-1)))))

MyImplicitSymbol('F_{i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P')))
if reaction_type.fall,reaction_type.chem,falloff_form.lind
Integer(1)
if reaction_type.fall,reaction_type.chem,falloff_form.troe
Pow(MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))), Pow(Add(Mul(Pow(MyImplicitSymbol('A_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(2)), Pow(MyImplicitSymbol('B_{Troe}', (MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))), MyImplicitSymbol('F_{cent}', MyImplicitSymbol('T', Symbol('t'))))), Integer(-2))), Integer(1)), Integer(-1)))
if reaction_type.fall,reaction_type.chem,falloff_form.sri
Mul(Pow(MyImplicitSymbol('T', Symbol('t')), Symbol('e')), Symbol('d'), Pow(Add(Mul(Symbol('a'), exp(Mul(Integer(-1), Pow(MyImplicitSymbol('T', Symbol('t')), Integer(-1)), Symbol('b')))), exp(Mul(Integer(-1), MyImplicitSymbol('T', Symbol('t')), Pow(Symbol('c'), Integer(-1))))), MyImplicitSymbol('X', MyImplicitSymbol('P_{r, i}', (MyImplicitSymbol('T', Symbol('t')), IndexedConc(Symbol('[C]'),Symbol('t')), Symbol('P'))))))


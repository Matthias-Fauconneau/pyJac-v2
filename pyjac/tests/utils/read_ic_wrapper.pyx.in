import cython
import numpy as np
cimport numpy as np

 from python_version cimport PY_MAJOR_VERSION
def work_with_text_data(text):
    if isinstance(text, unicode): # most common case first
        utf8_data = text.encode('UTF-8')
    elif (PY_MAJOR_VERSION < 3) and isinstance(text, str):
        text.decode('ASCII') # trial decoding, or however you want to check for plain ASCII data
        utf8_data = text
    else:
        raise ValueError("requires text input, got %s" % type(text))
    c_handle_data(utf8_data, len(utf8_data))

cdef extern from "read_initial_conditions${header_ext}":
    void read_initial_conditions (const_char *filename, unsigned int NUM,
                         double *T_host, double *P_host, double *conc_host,
                         const_char order);

@cython.boundscheck(False)
@cython.wraparound(False)
def read_ics(np.uint_t problem_size,
            np.uint_t num_devices,
            np.ndarray[np.float64_t] T,
            np.ndarray[np.float64_t] P,
            np.ndarray[np.float64_t] conc,
            np.ndarray[np.float64_t] wdot):
    global compiled
    if not compiled:
        compiler()
        compiled = True
    species_rates_kernel(problem_size, num_devices, &T[0], &P[0], &conc[0], &wdot[0])
    return None

def __dealloc__(self):
    finalize()